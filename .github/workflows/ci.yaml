name: CI
on:
  push:
    branches-ignore: [ master, main ]
jobs:
  source:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - run: zip -r -q ${{ github.sha }}.zip .
      - uses: 'actions/upload-artifact@v2'
        with:
          name: ${{ github.sha }}
          path: ${{ github.sha }}.zip

  lint:
    runs-on: ubuntu-latest
    needs: [ source ]
    timeout-minutes: 1
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
      - run: unzip -q -o ${{ github.sha }}.zip -d .
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - run: |
        echo "Debugging"
        pushd node-modules
        ls .bin
        popd
      - run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: [ source ]
    timeout-minutes: 2
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
      - run: unzip -q -o ${{ github.sha }}.zip -d .
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - run: yarn build
      - name: Zip build
        run: zip -r -q build.zip build
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: ./build.zip

  unit-test:
    runs-on: ubuntu-latest
    needs: [ source ]
    timeout-minutes: 2
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
      - run: unzip -q -o ${{ github.sha }}.zip -d .
      - run: echo "::set-output name=dir::$(yarn cache dir)"
        id: yarn-cache
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - run: yarn test

  validate-commit:
    runs-on: ubuntu-latest
    needs: [ lint, build, unit-test ]
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Set yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run yarn install
        run: yarn --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Unzip build
        run: unzip -q -o ./build.zip
      - name: Validate
        uses: ./
        with:
          db-connection-env-var: MONGO_CONNECTION_STRING
          run-command: yarn ci:validate
          binary-version: 4.4.6
          instance-dbName: validation
          instance-port: 27018
          instance-storageEngine: wiredTiger
          mongoms-debug: 1
      - uses: endbug/add-and-commit@v7
        if: github.ref != 'refs/heads/master'
        with:
          add: build
          default_author: github_actions
          signoff: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
