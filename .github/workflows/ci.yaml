name: ci
on:
  push:
    branches-ignore: [master, main]
env:
  PACKAGE_BUILD_FOLDER: build
jobs:
  # This demonstrates how a Workflow can (1) pull source code and (2) install dependencies exactly once using one Job,
  # and then relying on that artifact in subsequent Jobs - you know, like every other CI/CD platform!
  source:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --prefer-offline --frozen-lockfile --no-progress --non-interactive
      - run: zip -r -y -q code.${{ github.sha }}.zip .
      - uses: 'actions/upload-artifact@v2'
        with:
          name: code.${{ github.sha }}
          path: code.${{ github.sha }}.zip
          retention-days: 1
  # Code-linting
  lint:
    runs-on: ubuntu-latest
    needs: [source]
    timeout-minutes: 1
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: code.${{ github.sha }}
      - run: unzip -q -o code.${{ github.sha }}.zip -d .
      - run: yarn lint
  # Compile/Transpile/Build
  build:
    runs-on: ubuntu-latest
    needs: [source]
    timeout-minutes: 2
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: code.${{ github.sha }}
      - run: unzip -q -o code.${{ github.sha }}.zip -d .
      - run: yarn build
      - run: zip -r -q ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}.zip ${{ env.PACKAGE_BUILD_FOLDER }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}
          path: ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}.zip
          retention-days: 1
  # Apply unit tests directly against the TypeScript code, in parallel with 'lint' and 'build'
  unit-test:
    runs-on: ubuntu-latest
    needs: [source]
    timeout-minutes: 2
    strategy:
      matrix:
        test-group:
          - memory-server-factory
          - group-2
          - group-3
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: code.${{ github.sha }}
      - run: unzip -q -o code.${{ github.sha }}.zip -d .
      - run: yarn test --group=${{ matrix.test-group }}
  # In this case, the integration-test actually demonstrates running this GitHub Action locally to demonstrate its efficacy.
  integration-test:
    runs-on: ubuntu-latest
    needs: [lint, build, unit-test]
    timeout-minutes: 2
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: code.${{ github.sha }}
      - run: unzip -q -o code.${{ github.sha }}.zip -d .
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}
      - run: unzip -q -o ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}.zip -d ./${{ env.PACKAGE_BUILD_FOLDER }}
      - uses: ./
        with:
          dbConnectionStringEnvVar: MONGO_CONNECTION_STRING
          runCommand: yarn ci:validate
          mongomsBinaryVersion: 4.4.6
          mongomsDatabaseName: validation
          mongomsPort: 27018
          mongomsStorageEngine: wiredTiger
          mongomsDebug: 1
  # This Job is the precursor to creating a Pull Request to the default branch, pushing the build folder.
  # The build folder is required for publishing a Git Tag in a downstream Workflow.
  commit:
    runs-on: ubuntu-latest
    needs: [integration-test]
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: code.${{ github.sha }}
      - run: unzip -q -o code.${{ github.sha }}.zip -d .
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}
      - run: unzip -q -o ${{ env.PACKAGE_BUILD_FOLDER }}.${{ github.sha }}.zip -d ./${{ env.PACKAGE_BUILD_FOLDER }}
      - run: ls -alh
      - run: env
      - uses: endbug/add-and-commit@v7
        if: ${{ github.ref != 'refs/heads/master' }}
        with:
          add: ${{ env.PACKAGE_BUILD_FOLDER }}
          author_name: Humpty Dumpty
          author_email: humpty.dumpty@nurseryrhymes.org
          message: Commit the `${{ env.PACKAGE_BUILD_FOLDER }}` folder
          # default_author: github_actions
          signoff: true
